{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "common_fuzz_stuff",
  "steps": [
    {
      "file": "afl-fuzz.c",
      "description": "common_fuzz_stuff called from (only) fuzz_one \r\n\r\nglobal -rx common_fuzz_stuff | wc -l\r\n25\r\n\r\nfuzz_one 5003 - 6690\r\n\r\n> global -rx common_fuzz_stuff\r\ncommon_fuzz_stuff 5188 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5281 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5310 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5362 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5440 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5477 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5533 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5545 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5604 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5614 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5629 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5639 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5697 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5707 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5721 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5731 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5790 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5843 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5856 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5912 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5925 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5991 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 6035 afl-fuzz.c             if (common_fuzz_stuff(argv, ex_tmp, len + extras[j].len)) {\r\ncommon_fuzz_stuff 6091 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 6537 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, temp_len))\r\n\r\n> global -rx fuzz_one\r\nfuzz_one         8133 afl-fuzz.c           skipped_fuzz = fuzz_one(use_argv);\r\n\r\nsimple bitflip. \r\nFLIP_BIT over out_buf.\r\n\r\nFLIP_BIT(out_buf, stage_cur);\r\nFLIP_BIT(out_buf, stage_cur + 1);\r\n\r\nfor (stage_cur = 0; stage_cur < stage_max; stage_cur++) {",
      "line": 5281,
      "selection": {
        "start": {
          "line": 5278,
          "character": 5
        },
        "end": {
          "line": 5279,
          "character": 38
        }
      }
    },
    {
      "file": "afl-fuzz.c",
      "description": "run targetを呼び出す。\r\nsave_if_interestingを１回だけ呼び出し。\r\n\r\nすべてfuzz_oneから呼び出される。\r\n\r\nBIT FLIPなどのstrategyに対して、common.",
      "line": 4650
    },
    {
      "file": "afl-fuzz.c",
      "description": "common_fuzz_stuff\r\n\r\n# global -rx common_fuzz_stuff                                                                                                                                                    \r\ncommon_fuzz_stuff 5188 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5281 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5310 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5362 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5440 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5477 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5533 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5545 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5604 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5614 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5629 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5639 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5697 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5707 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5721 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5731 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5790 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5843 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5856 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5912 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5925 afl-fuzz.c               if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 5991 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 6035 afl-fuzz.c             if (common_fuzz_stuff(argv, ex_tmp, len + extras[j].len)) {\r\ncommon_fuzz_stuff 6091 afl-fuzz.c             if (common_fuzz_stuff(argv, out_buf, len)) goto abandon_entry;\r\ncommon_fuzz_stuff 6537 afl-fuzz.c           if (common_fuzz_stuff(argv, out_buf, temp_len))",
      "line": 5003
    },
    {
      "file": "afl-fuzz.c",
      "description": "排他的論理和を用いた変換\r\n\r\n",
      "line": 5164
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /*********************************************\r\n   * SIMPLE BITFLIP (+dictionary construction) *\r\n   *********************************************/",
      "line": 5310
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /*********************************************\r\n   * SIMPLE BITFLIP (+dictionary construction) *\r\n   *********************************************/",
      "line": 5362
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /*********************************************\r\n   * SIMPLE BITFLIP (+dictionary construction) *\r\n   *********************************************/\r\n\r\n   chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/http://www.mustakim.info/uga_cyber_security/Fuzzing.pdf\r\n   Examples:\r\n   -interest: -1, 0x8000000, 0xffff, etc\r\n   -bitflip: flipping 1,2,3,4,8,16,32 bits.\r\n   -havoc: random tweak in fixed length.\r\n   -extra: dictionary, remove Null, etc..\r\n\r\n   如果相加后效果与之前的某种bitflip相同，并且加完后影响到另一个字节，则运算 ，调用 common_fuzz_stuff 检查，如果为1，则丢弃。(orig & 0xffff) + j > 0xffff 同理，低16bits能否影响高16bits\r\n\r\n",
      "line": 5440
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n\r\n  stage_name  = \"arith 8/8\";\r\n  stage_short = \"arith8\";\r\n  stage_cur   = 0;\r\n  stage_max   = 2 * len * ARITH_MAX;\r\n\r\nu8 r = orig ^ (orig + j);\r\n",
      "line": 5533,
      "selection": {
        "start": {
          "line": 5523,
          "character": 7
        },
        "end": {
          "line": 5523,
          "character": 32
        }
      }
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5545
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5604
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5614
    },
    {
      "file": "afl-fuzz.c",
      "description": "DIC STUFF",
      "line": 6035
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5629
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5639
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5697
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5707
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5721
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/\r\n",
      "line": 5731
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * INTERESTING VALUES *\r\n   **********************/",
      "line": 5790
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * INTERESTING VALUES *\r\n   **********************/",
      "line": 5843
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * INTERESTING VALUES *\r\n   **********************/",
      "line": 5856
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * INTERESTING VALUES *\r\n   **********************/",
      "line": 5912
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * INTERESTING VALUES *\r\n   **********************/",
      "line": 5925
    },
    {
      "file": "afl-fuzz.c",
      "description": "invokes common_fuzz_stuff.",
      "line": 5003
    },
    {
      "file": "afl-fuzz.c",
      "description": "FLIP_BIT for common_fuzz_stuff",
      "line": 5164
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /*********************************************\r\n   * SIMPLE BITFLIP (+dictionary construction) *\r\n   *********************************************/\r\n\r\n   ",
      "line": 5188
    },
    {
      "file": "afl-fuzz.c",
      "description": "common_fuzz_stuff\r\n",
      "line": 208
    },
    {
      "file": "afl-fuzz.c",
      "description": "  /**********************\r\n   * ARITHMETIC INC/DEC *\r\n   **********************/",
      "line": 5533
    },
    {
      "file": "afl-fuzz.c",
      "description": "ARITHMETIC INC/DEC * **********************/\r\n",
      "line": 5707
    },
    {
      "file": "afl-fuzz.c",
      "description": "/****************\r\n\r\nRANDOM HAVOC * ****************/\r\n\r\nfuzz_one(){\r\n    1. favoredなtest caseが存在するかを確認\r\n    2. calibration\r\n    3. input trimming\r\n    4. performance scoreの計算\r\n    5. deterministic phase\r\n       - bitflip\r\n       - interest\r\n       - dctionary\r\n    6. non-deterministic phase\r\n       - havoc\r\n       - splice\r\n}\r\n\r\n",
      "line": 6537
    },
    {
      "file": "afl-fuzz.c",
      "description": "index random havoc",
      "line": 6115
    },
    {
      "file": "afl-fuzz.c",
      "description": "  6115.\r\n  \r\n  /****************\r\n   * RANDOM HAVOC *\r\n   ****************/",
      "line": 6537
    }
  ]
}
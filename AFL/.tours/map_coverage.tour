{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "map_coverage",
  "steps": [
    {
      "file": "afl-fuzz.c",
      "description": "map coverage\r\n - map density \r\n - count coverage\r\n \r\n\"map density\"は、AFLがプログラムを実行する際に、どの程度のプログラムカウンタ（PC）の値が特定のテストケースの実行中に訪れられたかを測定します。プログラムカウンタは、プログラム内の実行中の命令の位置を示すために使用されるレジスタです。\"map density\"が高いほど、テストケースがプログラムの異なるパスを通過したことを意味し、コードカバレッジが向上していることを示します。\r\n\r\n「map_coverage」は、ファジングの過程で生成されたテストケースがソフトウェアのどれだけの部分（基本ブロックやエッジ）をカバーしたかを示す指標です。具体的には、テストケースがプログラム内の異なる分岐点やコードパスに到達することで、このカバレッジが増加します。カバレッジが高いほど、多くのコードパスがテストされていることを意味し、より多くの潜在的なバグが発見される可能性が高くなります。\r\n\r\n「map_density」は、カバレッジ内の基本ブロックやエッジがどれだけ密集しているかを示す指標です。これは、あるコードパスがどれだけ多くの分岐点や命令を通過するかを表します。map_densityが高いということは、テストケースが特定のコードパスをより詳細に探索していることを意味します。",
      "line": 4166
    },
    {
      "file": "afl-fuzz.c",
      "description": "count coverageの計算にt_bytesをつかう。",
      "line": 3987
    }
  ]
}
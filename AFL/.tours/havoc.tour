{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "havoc",
  "steps": [
    {
      "file": "afl-fuzz.c",
      "description": " havoc_div = 1;             /* Cycle count divisor for havoc    */",
      "line": 4310
    },
    {
      "file": "afl-fuzz.c",
      "description": "starts here",
      "line": 6116
    },
    {
      "file": "afl-fuzz.c",
      "description": "なぜランダムになる？\r\nUR() 関数は、指定された上限 limit に基づいて 0 から limit-1 の範囲内でランダムな数を生成する関数\r\nURは3**行目。\r\n\r\nstatic inline u32 UR(u32 limit) {\r\n\r\n  if (unlikely(!rand_cnt--)) {\r\n\r\n    u32 seed[2];\r\n\r\n    ck_read(dev_urandom_fd, &seed, sizeof(seed), \"/dev/urandom\");\r\n\r\n    srandom(seed[0]);\r\n    rand_cnt = (RESEED_RNG / 2) + (seed[1] % RESEED_RNG);\r\n\r\n  }\r\n\r\n  return random() % limit;\r\n\r\n}",
      "line": 6183
    },
    {
      "file": "afl-fuzz.c",
      "description": "「UR(2)」は、2の範囲でランダムな整数を生成する関数\r\nバグ検出のための入力変異: Fuzzing (ファズテスト) ツールで異なる入力パターンを生成。\r\n\r\nランダムの確率でペイロードを変異。\r\n",
      "line": 6187
    }
  ]
}